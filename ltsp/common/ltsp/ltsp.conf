# /bin/sh -n
# LTSP configuration file
# Documentation=man:ltsp.conf(5)

# The special [server] section is evaluated only by the ltsp server
[server]
# Enable NAT on dual NIC servers
# NAT=1
# Provide a full menu name for x86_32.img when `ltsp ipxe` runs
# REPLACED by BOOT_METHOD_[0-9]*_BOOTNAME, see below! IPXE_X86_32_IMG="Debian Buster"

# The special [common] section is evaluated by both the server and ltsp clients
[common]
# Specify an alternative TFTP_DIR
# TFTP_DIR=/var/lib/tftpboot

### INFO (to be removed):
# Doing away with a predefined standard boot method in 55-ipxe.sh makes LTSP
# more generic and adaptable to any needs.
#
# The 6 lines for BOOT_METHOD_1 and BOOT_METHOD_2 setup ltsp.ipxe with exactly
# the same functionality as before, but they can also be changed or turned off
# completely without having to modify 55-ipxe.sh.
#
# The scripts look for image.img files or directories with a /proc subdir and
# set them up for booting the respective BOOT_METHOD.

# BOOT_METHOD_[0-9]*
# The respective BOOT_METHOD is applied to all *.img or chroots found in the
# specified DIR. Each directory should exclusively contain either *.img files or
# chroots (a dir with subdir /proc present is enough). DIR is always relative to
# $BASE_DIR and can be left unset or empty, if the targets reside in $BASE_DIR.
# The search for *.img and chroots is not recursive.
# Variables like ${img} or ${srv} may be used, if the string is enclosed in
# single quotes.
# You can savely apply different BOOT_METHODs to the same image directory.

BOOT_METHOD_1='root=/dev/nfs nfsroot=${srv}:/srv/ltsp ltsp.image=images/${img}.img loop.max_part=9'
BOOT_METHOD_1_DIR="images"
BOOT_METHOD_1_NAME="Boot squashfs images via NFS in LTSP mode:"

# If DIR is empty or unset, $BASE_DIR is being used.
BOOT_METHOD_2='root=/dev/nfs nfsroot=${srv}:/srv/ltsp/${img}'
BOOT_METHOD_2_DIR=""
BOOT_METHOD_5_NAME="Boot NFS root directories:"

# A custom title may be applied to a menu item with "BOOT_METHOD_<NUMBER>_<NAME>
# <NAME> is the *.img file or chroot dir name converted to uppercase and with
# any characters not in [0-9A-Z] converted to underscores - e.g. tails-01 would
# become TAILS_01.
# BOOT_METHOD_3_TAILS_01="Tails Live CD"
# To define a default menu entry, set BOOT_DEFAULT to "BOOT_METHOD_<NUMBER>_<NAME>
# BOOT_DEFAULT="BOOT_METHOD_3_TAILS_01"

# RBD BOOT_METHOD example:
# It follows this form: rbdroot=<mons>:<user>:<key>:<pool>:<image>[@<snapshot>]:[<partition>]:[<mountopts>]
# Be aware that user is the username part only not "client.username" as often
# referred to in Ceph. If the MON services listen on a non-standard port, port
# shall be specified with ";" instead of standard ":" for obvious reasons -
# e.g. host;7000
# BOOT_METHOD_3='boot=rbd ro rbdroot=10.101.0.4,10.101.0.5,10.101.0.6:user:secretkey==:rbd:${img}:1:'
# BOOT_METHOD_3_DIR="rbd"
# BOOT_METHOD_3_NAME="RBD ro:"

# iSCSI BOOT_METHOD example:
# To be added later.

# In the special [clients] section, parameters for all clients can be defined.
# Most ltsp.conf parameters should be placed here.
[clients]
# Specify an /etc/fstab line for NFS home; note this is insecure
# FSTAB_NFS="server:/home /home nfs defaults,nolock 0 0"

# MAC address, IP address, or hostname sections can be used to apply settings
# to specific clients.
[61:6c:6b:69:73:67]
# HOSTNAME=pc01
# Include parameters from another section, defined below
# INCLUDE=crt_monitor

# Globs can be used in MAC, IP, or hostname sections.
# This matches all Raspberry Pi 3-; [dc:a6:32:*] matches rpi4.
[b8:27:eb:*]
# HOSTNAME_PREFIX=rpi

# If you have proper DNS, you can use hostname sections
[administrator-pc]
# Only allow the administrator to log in to this client
# PWMERGE_SUR="administrator"

# You can also group parameters into named sections and INCLUDE= them elsewhere
[crt_monitor]
# Force EDID and resolution to 1024x768 for clients with old CRT monitors
X_HORIZSYNC="28.0-87.0"
X_VERTREFRESH="43.0-87.0"
X_MODES='"1024x768" "800x600" "640x480"'
